<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="order">

	<select id="selectOrderBid" parameterClass="map" resultClass="bidVo" >
	<!--
		  판매자가 판매입찰했을 때 입찰가격이 같거나 높은 구매입찰의 입찰건 중에 가장 큰값을 가진 행을 조회 
		  bid_price : 판매자가 판매입찰 한 가격
		  size_id : 판매자가 판매입찰한 size_id
	 -->
	 select c.bid_id, c.mem_email, c.bid_price
       from ( select a.bid_id, a.mem_email, a.bid_price
               from bid a , prod_size b
			  where a.size_id = b.size_id
  			    and a.bid_position = 'buyer'
  	   <![CDATA[and a.bid_price >=#bid_price# ]]>
			    and a.size_id = #size_id#
			    and a.bid_state = 0
			   order by a.bid_price desc) c
  	   where rownum = 1
	</select>
	
	<select id="pointchk" parameterClass="string" resultClass="bidVo">
	<!-- 포인트 사용여부 -->
		  SELECT POINT_YN, POINT
    	    FROM BID
           WHERE BID_ID = #BID_ID#
	</select>
	
	<insert id="insertBidTemp" parameterClass="bidVo">
	<!-- selectOrderBid 결과가 존재할때 결과행을 응찰테이블에 추가 
		 구매입찰코드, 판매자아이디 , 판매입찰가격, 응찰된 날짜  
	-->
		insert into bid_temp(bid_id,mem_email,temp_price,temp_date)
	     values(#bid_id#, #mem_email#, #temp_price# , sysdate)
	</insert>
	
	<update id="updateBidState" parameterClass="map">
	<!-- 판매입찰코드와 구매입찰코드 입찰상태 변경
	-->
		 update bid
   		    set bid_state = '1'
    	  where bid_id = #bid_id1#
             or bid_id = #bid_id2#
	</update>
	
	<insert id="insertOrder" parameterClass="bidVo">
	<!-- 결제 완료되면 bid_temp 
			order_price : 포인트 사용여부에 따라 계산후 저장 
	-->
		insert into orders(bid_id,mem_email,order_date,order_price)
  		 values(#bid_id#,#mem_email#, sysdate,#order_price# )
	</insert>
	
	<select id="selectSellBid" parameterClass="map" resultClass="bidVo">
	<!--
		  구매자가 구매입찰했을 때 
		  구매자가 구매입찰한 가격이 같거나 낮은 판매입찰건 중에 가장 작은값을 가진 행을 조회 
		  bid_price : 구매자가 구매입찰 한 가격
		  size_id : 구매가 구매입찰한 size_id
	 -->
	select c.bid_id, c.mem_email,c.bid_price
      from ( select a.bid_id, a.mem_email,a.bid_price
               from bid a , prod_size b
       		  where a.size_id = b.size_id
  			    and a.bid_position = 'seller'
  	   <![CDATA[and a.bid_price <=#bid_price#]]>
  			    and a.size_id = #size_id#
  			    and a.bid_state = 0
  			  order by a.bid_price ) c
     where rownum = 1
	</select>
	
	<update id="updatePoint" parameterClass="map">
	<!-- 판매자에게 정산해준다.
		 판매입찰의 경우 bid_id : 구매입찰건의 bid_id 
		 구매입찰의 경우 bid_id : 판매입찰건의 bid_id 
		 mem_email : 판매자의 이메일 
	 -->
		UPDATE MEMBER 
  		   SET MEM_POINT = MEM_POINT + (  SELECT BID_PRICE 
                       						FROM BID
                      					   WHERE  BID_ID = #BID_ID#)
  		 WHERE MEM_EMAIL = #MEM_EMAIL#
	</update>
	
</sqlMap>